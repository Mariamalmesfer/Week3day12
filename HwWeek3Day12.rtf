{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red28\green28\blue28;\red255\green255\blue255;
\red89\green158\blue96;\red23\green23\blue26;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c14510\c14510\c14510;\cssrgb\c100000\c100000\c100000;
\csgenericrgb\c34902\c61961\c37647;\csgenericrgb\c9020\c9020\c10196;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs48 \cf0 \
Q1:\
\
The output:\cb2   hey from message1\
The explanation: \cf3 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 First, the @Bean annotation will create a String object and store it in the\
\pard\pardeftab720\sa240\partightenfactor0
\cf3 context. When the app starts running, the method will be called, and the message will be printed.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \cb2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \cb1 Q2:\
\
The output:\cb4   \
hey from message1\
hey from message2\
The explanation: \cf3 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 There are getMessage1 and getMessage2 methods defined as beans.\
\pard\pardeftab720\sa240\partightenfactor0
\cf3 and the @Qualifie annotation shows the order of these methods. So the getMessage2 method depends on the getMessage1 method, which means the getMessage1 method will print first.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf5 \cb6 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf5 \
\
\cf7 \cb2 Q3:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \cb1 The output:\cb4   \
\
hey from message1\
hey from message3\
hey from message2\
\
The explanation: \cf7 \cb2 \
\pard\pardeftab720\sa240\partightenfactor0
\cf3 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 As mentioned in Q2, the @Qualifie annotation shows the order of these methods. and the dependency. So in this case, the getMessage1 method will be printed first because it doesn't depend on any other method. After that,\'a0the getMessage3 method will be printed next because the getMessage2 method depends on the getMessage3 method, and then the last method to print is getMessage2.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf7 \cb2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
Q4:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \cb1 The output:\cb4  \cf7 \cb2 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf7 hey from message1\
hey from Main controller\
hey from message3\
hey from message2\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \cb4 The explanation:\
\pard\pardeftab720\sa240\partightenfactor0
\cf3 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 As mentioned before, the @Qualifie annotation shows the order of these methods and the dependency. So in this case, the getMessage1 method will be printed first because it doesn't depend on any other method. After that, the method MainController in the MainController class will be printed next because it depends on the getMessage1 method in the main class, and then the getMessage3 method will be printed next because the getMessage2 method depends on the getMessage3 method, and then the last method to print is getMessage2.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf7 \cb2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
Q5:\
\
\cf0 \cb1 The output:\cb4  \cf7 \
hey from message3\
hey from message2\
hey from Main controller\
hey from message1\
\
\cf0 The explanation:\
\pard\pardeftab720\sa240\partightenfactor0
\cf3 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Because we don't have an @Qualifie in the getMessage1 method and the getMessage3 method, spring context is free to  start with any one of them. So it starts printing with method 3. After that, because the getMessage2 method depends on the getMessage3 method, getMessage2 will be printed next. and next will be the MainController method to print because it depends on the getMessage2 method. Lastly, getMessage1 will be printed.
\fs24 \
\'a0\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs26 \cf7 \cb2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
}